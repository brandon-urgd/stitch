AWSTemplateFormatVersion: '2010-09-09'
Description: 'stitch Scalable Multi-Converter Architecture'

# Global Tags
Metadata:
  Tags:
    - Key: brand
      Value: urgd
    - Key: project
      Value: stitch

Parameters:
  Environment:
    Type: String
    Default: 'prod'
    Description: 'Environment name (prod, dev, staging)'
    AllowedValues: ['prod', 'dev', 'staging']
  
  StitchFunctionCodeKey:
    Type: String
    Default: 'stitch/artifacts/latest/stitch-function-latest.zip'
    Description: 'S3 key for Stitch SVG Converter Lambda function code'
  
  StitchLayerCodeKey:
    Type: String
    Default: 'stitch/layers/latest/svg-embroidery.zip'
    Description: 'S3 key for SVG Embroidery Lambda Layer'
  
  GitCommit:
    Type: String
    Default: 'latest'
    Description: 'Git commit hash for versioning'

  # Monitoring Parameters
  MonitoringEmail:
    Type: String
    Default: alerts@urgd.dev
    Description: Email address for monitoring alerts

  CriticalAlertsEmail:
    Type: String
    Default: critical@urgd.dev
    Description: Email address for critical alerts

  # Certificate ARNs for custom domains
  AcmCertArnApiRegion:
    Type: String
    Default: 'arn:aws:acm:us-west-2:198919428218:certificate/1527d0ac-b0e3-4d3b-b003-a3234ca35935'
    Description: 'ACM certificate ARN for api.stitch.urgd.dev (must be in us-west-2 for API Gateway)'

  AcmCertArnCloudFront:
    Type: String
    Default: 'arn:aws:acm:us-east-1:198919428218:certificate/1bb45d38-488a-4799-839c-2b9895da7f47'
    Description: 'ACM certificate ARN for stitch.urgdstudios.com (must be in us-east-1 for CloudFront)'

  # Route 53 Hosted Zone IDs
  UrgdDevHostedZoneId:
    Type: String
    Default: 'Z01725332W8W14423YXSC'
    Description: 'Route 53 Hosted Zone ID for urgd.dev'

  UrgdStudiosHostedZoneId:
    Type: String
    Default: 'Z0338626TGE7PTZDLIT1'
    Description: 'Route 53 Hosted Zone ID for urgdstudios.com'

# Conditions
Conditions:
  IsProdEnvironment:
    !Equals
      - !Ref Environment
      - 'prod'
  EnableCriticalAlerts:
    !Equals
      - !Ref Environment
      - 'prod'

Resources:
  # S3 Bucket for user temporary file storage
  StitchStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'urgd-stitch-storage-${Environment}-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteTempFiles
            Status: Enabled
            ExpirationInDays: 1
            Prefix: 'temp/'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # IAM Role for Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'urgd-stitch-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::${StitchStorageBucket}/*'
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # S3 Bucket for static website hosting
  StitchWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'urgd-stitch-website-${Environment}-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # Origin Access Control for CloudFront
  StitchOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub 'urgd-stitch-oac-${Environment}'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # S3 Bucket Policy for CloudFront OAC
  StitchWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StitchWebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${StitchWebsiteBucket}/*'

  # SVG & Embroidery Lambda Layer
  SvgEmbroideryLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub 'urgd-svg-embroidery-${Environment}-${GitCommit}'
      Description: !Sub "SVG processing and embroidery - ${Environment} - ${GitCommit}"
      Content:
        S3Bucket: 'urgd-applicationdata'
        S3Key: !Ref StitchLayerCodeKey
      CompatibleRuntimes:
        - python3.12
      CompatibleArchitectures:
        - x86_64
      LicenseInfo: "UNLICENSED"

  # Lambda Function
  StitchSvgConverterFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'urgd-stitch-svg-converter-v1-${Environment}-${GitCommit}'
      Runtime: python3.12
      Handler: svg_converter.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref SvgEmbroideryLayer
      Code:
        S3Bucket: 'urgd-applicationdata'
        S3Key: !Ref StitchFunctionCodeKey
      MemorySize: 1024
      Timeout: 60
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          BUCKET_NAME: !Ref StitchStorageBucket
          ENVIRONMENT: !Ref Environment
          VERSION: !Ref GitCommit
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # CloudWatch Log Group for Lambda Function
  StitchLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/urgd-stitch-svg-converter-v1-${Environment}-${GitCommit}'
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
    DependsOn: StitchSvgConverterFunction

  # Health Check Lambda Function
  StitchHealthCheckFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'urgd-stitch-health-check-v1-${Environment}-${GitCommit}'
      Runtime: python3.12
      Handler: health_check.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: 'urgd-applicationdata'
        S3Key: !Ref StitchFunctionCodeKey
      MemorySize: 128
      Timeout: 30
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          BUCKET_NAME: !Ref StitchStorageBucket
          ENVIRONMENT: !Ref Environment
          VERSION: !Ref GitCommit
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # CloudWatch Log Group for Health Check Function
  StitchHealthCheckLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/urgd-stitch-health-check-v1-${Environment}-${GitCommit}'
      RetentionInDays: !If [IsProdEnvironment, 30, 7]
    DependsOn: StitchHealthCheckFunction

  # API Gateway REST API
  StitchApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub 'urgd-stitch-svg-converter-api-${Environment}'
      Description: 'API Gateway for Stitch SVG to PES converter API'
      EndpointConfiguration:
        Types:
          - REGIONAL
      BinaryMediaTypes:
        - '*/*'
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # API Gateway Lambda Permission
  StitchApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StitchSvgConverterFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StitchApiGateway}/*/*'

  # API Gateway Lambda Permission for Health Check
  StitchHealthCheckApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StitchHealthCheckFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StitchApiGateway}/*/*'

  # API Gateway Resource for /v1 path
  StitchV1Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StitchApiGateway
      ParentId: !GetAtt StitchApiGateway.RootResourceId
      PathPart: v1

  # API Gateway Resource for /v1/convert path
  StitchConvertResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StitchApiGateway
      ParentId: !Ref StitchV1Resource
      PathPart: convert

  # API Gateway Resource for /v1/convert/svg path
  StitchSvgResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StitchApiGateway
      ParentId: !Ref StitchConvertResource
      PathPart: svg

  # API Gateway Resource for /v1/health path
  StitchHealthResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref StitchApiGateway
      ParentId: !Ref StitchV1Resource
      PathPart: health

  # API Gateway Method for POST requests
  StitchSvgConverterMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StitchApiGateway
      ResourceId: !Ref StitchSvgResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StitchSvgConverterFunction.Arn}/invocations'

  # API Gateway Method for OPTIONS requests (CORS)
  StitchSvgConverterOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StitchApiGateway
      ResourceId: !Ref StitchSvgResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true

  # API Gateway Method for GET /health
  StitchHealthGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StitchApiGateway
      ResourceId: !Ref StitchHealthResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StitchHealthCheckFunction.Arn}/invocations'

  # API Gateway Method for OPTIONS /health (CORS)
  StitchHealthOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StitchApiGateway
      ResourceId: !Ref StitchHealthResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true

  # API Gateway Deployment
  StitchApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
      - StitchSvgConverterMethod
      - StitchSvgConverterOptionsMethod
      - StitchHealthGetMethod
      - StitchHealthOptionsMethod
    Properties:
      RestApiId: !Ref StitchApiGateway
      StageName: !Ref Environment

  # API Gateway Custom Domain
  StitchApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - IsProdEnvironment
        - 'api.stitch.urgd.dev'
        - !Sub 'api-${Environment}.stitch.urgd.dev'
      RegionalCertificateArn: !Ref AcmCertArnApiRegion
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # API Gateway Base Path Mapping
  StitchApiGatewayBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: StitchApiGatewayDeployment
    Properties:
      DomainName: !Ref StitchApiGatewayDomainName
      RestApiId: !Ref StitchApiGateway
      Stage: !Ref Environment
      BasePath: ''

  # Route 53 Record for API Gateway
  StitchApiGatewayDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref UrgdDevHostedZoneId
      Name: !If
        - IsProdEnvironment
        - 'api.stitch.urgd.dev'
        - !Sub 'api-${Environment}.stitch.urgd.dev'
      Type: A
      AliasTarget:
        DNSName: !GetAtt StitchApiGatewayDomainName.RegionalDomainName
        HostedZoneId: !GetAtt StitchApiGatewayDomainName.RegionalHostedZoneId

  # S3 Bucket for access logs
  StitchAccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'urgd-stitch-access-logs-${Environment}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # CloudTrail for audit logging
  StitchCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub "urgd-stitch-${Environment}-trail"
      S3BucketName: !Ref StitchAccessLogsBucket
      S3KeyPrefix: "cloudtrail-logs/"
      IncludeGlobalServiceEvents: false
      IsMultiRegionTrail: false
      IsLogging: true
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub "${StitchStorageBucket.Arn}/*"
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # SNS Topics for Alerting
  StitchStandardAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "urgd-stitch-standard-alerts-${Environment}"
      DisplayName: !Sub "urgd stitch - ${Environment} Standard Alerts"
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  StitchCriticalAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "urgd-stitch-critical-alerts-${Environment}"
      DisplayName: !Sub "urgd stitch - ${Environment} Critical Alerts"
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  StitchStandardAlertsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref StitchStandardAlertsTopic
      Endpoint: !Ref MonitoringEmail

  StitchCriticalAlertsSubscription:
    Type: AWS::SNS::Subscription
    Condition: EnableCriticalAlerts
    Properties:
      Protocol: email
      TopicArn: !Ref StitchCriticalAlertsTopic
      Endpoint: !Ref CriticalAlertsEmail

  # CloudWatch Alarms
  StitchLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "urgd-stitch-lambda-errors-${Environment}"
      AlarmDescription: "Lambda function errors for stitch converter"
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref StitchSvgConverterFunction
      AlarmActions:
        - !Ref StitchStandardAlertsTopic
      OKActions:
        - !Ref StitchStandardAlertsTopic

  StitchLambdaDurationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "urgd-stitch-lambda-duration-${Environment}"
      AlarmDescription: "Lambda function duration for stitch converter"
      MetricName: Duration
      Namespace: AWS/Lambda
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 45000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref StitchSvgConverterFunction
      AlarmActions:
        - !Ref StitchStandardAlertsTopic
      OKActions:
        - !Ref StitchStandardAlertsTopic

  StitchApiGateway5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "urgd-stitch-api-5xx-errors-${Environment}"
      AlarmDescription: "API Gateway 5xx errors for stitch"
      MetricName: 5XXError
      Namespace: AWS/ApiGateway
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ApiName
          Value: !Ref StitchApiGateway
      AlarmActions:
        - !Ref StitchCriticalAlertsTopic
      OKActions:
        - !Ref StitchCriticalAlertsTopic

  # CloudFront Distribution
  StitchCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub 'Stitch Scalable Multi-Converter Architecture - ${Environment}'
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !If
            - IsProdEnvironment
            - 'stitch.urgdstudios.com'
            - !Sub '${Environment}.stitch.urgdstudios.com'
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertArnCloudFront
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Origins:
          - Id: StitchWebsiteOrigin
            DomainName: !GetAtt StitchWebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !Ref StitchOriginAccessControl
          - Id: StitchApiOrigin
            DomainName: !Sub '${StitchApiGateway}.execute-api.${AWS::Region}.amazonaws.com'
            CustomOriginConfig:
              HTTPPort: 443
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: StitchWebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 86400
          MaxTTL: 31536000
        CacheBehaviors:
          - PathPattern: '/v1/convert/*'
            TargetOriginId: StitchApiOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - POST
              - PUT
              - DELETE
              - PATCH
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
              Headers:
                - Authorization
                - Content-Type
            MinTTL: 0
            DefaultTTL: 0
            MaxTTL: 0
      Tags:
        - Key: brand
          Value: urgd
        - Key: project
          Value: stitch
        - Key: studio
          Value: Vault
        - Key: environment
          Value: !Ref Environment
        - Key: cfn-stack-name
          Value: !Ref AWS::StackName

  # Route 53 Record for CloudFront
  StitchCloudFrontDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref UrgdStudiosHostedZoneId
      Name: !If
        - IsProdEnvironment
        - 'stitch.urgdstudios.com'
        - !Sub '${Environment}.stitch.urgdstudios.com'
      Type: A
      AliasTarget:
        DNSName: !GetAtt StitchCloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  WebsiteUrl:
    Description: 'S3 Website URL'
    Value: !GetAtt StitchWebsiteBucket.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteUrl'
  
  ApiUrl:
    Description: 'API Gateway URL'
    Value: !Sub 'https://${StitchApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-ApiUrl'
  
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref StitchCloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDistributionId'
  
  CloudFrontUrl:
    Description: 'CloudFront Distribution URL'
    Value: !Sub 'https://${StitchCloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontUrl'
  
  S3BucketName:
    Description: 'S3 bucket for temporary file storage'
    Value: !Ref StitchStorageBucket
    Export:
      Name: !Sub '${AWS::StackName}-S3Bucket'
  
  WebsiteBucketName:
    Description: 'S3 bucket for website hosting'
    Value: !Ref StitchWebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucketName'

  CustomApiUrl:
    Description: 'Custom API Gateway URL'
    Value: !If
      - IsProdEnvironment
      - 'https://api.stitch.urgd.dev'
      - !Sub 'https://api-${Environment}.stitch.urgd.dev'
    Export:
      Name: !Sub '${AWS::StackName}-CustomApiUrl'

  CustomWebsiteUrl:
    Description: 'Custom CloudFront URL'
    Value: !If
      - IsProdEnvironment
      - 'https://stitch.urgdstudios.com'
      - !Sub 'https://${Environment}.stitch.urgdstudios.com'
    Export:
      Name: !Sub '${AWS::StackName}-CustomWebsiteUrl'

  # Monitoring Outputs
  StandardAlertsTopicArn:
    Description: "SNS Topic ARN for standard alerts"
    Value: !Ref StitchStandardAlertsTopic
    Export:
      Name: !Sub "${AWS::StackName}-StandardAlertsTopicArn"

  CriticalAlertsTopicArn:
    Description: "SNS Topic ARN for critical alerts"
    Value: !Ref StitchCriticalAlertsTopic
    Export:
      Name: !Sub "${AWS::StackName}-CriticalAlertsTopicArn"

  HealthCheckUrl:
    Description: "Health check endpoint URL"
    Value: !Sub 'https://${StitchApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/v1/health'
    Export:
      Name: !Sub "${AWS::StackName}-HealthCheckUrl"